plugins {
    alias(libs.plugins.android.application)
    alias(libs.plugins.jetbrains.kotlin.android)
}

android {
    namespace 'com.wgllss.dynamic.host'
    compileSdk libs.versions.compileSdk.get().toInteger()

    defaultConfig {
        applicationId "com.wgllss.dynamic.host.sample"
        minSdkVersion libs.versions.minSdk.get().toInteger()
        targetSdkVersion libs.versions.targetSdkVersion.get().toInteger()
        versionCode 10000
        versionName "1.0000"
        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }
    }

    signingConfigs {
        def password = "WXSample"
        def alias = "WXSample"
        def filePath = "./sign/WXSample.jks"
        debug {
            keyAlias alias
            keyPassword password
            storeFile file(filePath)
            storePassword(password)
            v1SigningEnabled true
            v2SigningEnabled true
        }
        release {
            keyAlias alias
            keyPassword password
            storeFile file(filePath)
            storePassword(password)
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        debug {
            // 假如打包后运行闪退，可以在调试模式下打开混淆查看日志找出混淆问题
            debuggable false
            minifyEnabled true // 开启混淆
            shrinkResources false // 启动资源压缩
            zipAlignEnabled true // 开启zipalign优化
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }

        release {
            debuggable false
            minifyEnabled true // 开启混淆
            shrinkResources false // 启动资源压缩
            zipAlignEnabled true // 开启zipalign优化
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }

        applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "WXDynamicPlugin_Sample_${variant.buildType.name}.apk"
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        buildConfig true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.7.0"
    }
}

dependencies {

    implementation libs.appcompat
    implementation libs.androidx.recyclerview
    implementation libs.google.material
    implementation libs.constraintlayout

    implementation 'io.github.wgllss:Wgllss-Dynamic-Host-Constant-Lib:1.0.0.6'
    implementation 'io.github.wgllss:Wgllss-Dynamic-Host-Download-Lib:1.0.0.8'
    implementation 'io.github.wgllss:Wgllss-Dynamic-Host-Lib-Impl:1.0.1.6'
    implementation 'io.github.wgllss:Wgllss-Dynamic-Host-Version-Lib:1.0.0.7'

    implementation project(path: ':maven-wgllss-dynamic-host-skin-resource-lib')
    implementation project(path: ':maven-wgllss-common-re-library')
    implementation project(path: ':maven-wgllss-business-re-library')
    implementation project(path: ':maven-wgllss-dynamic-host-library')


}